{
  "uid": "a0228f43482c24dd2ae5c5a66bb421cfbd35eba5.boutiques",
  "package": {
    "name": "workbench",
    "version": "1.5.0",
    "docker": "brainlife/connectome_workbench:1.5.0-freesurfer-update",
    "docs": {
      "title": "Connectome Workbench",
      "description": "Connectome Workbench is an open source, freely available visualization and discovery tool used to map neuroimaging data, especially data generated by the Human Connectome Project. The distribution includes wb_view, a GUI-based visualiation platform, and wb_command, a command-line program for performing a variety of algorithmic tasks using volume, surface, and grayordinate data. wb_command is necessary for running HCP data processing pipelines.",
      "authors": [],
      "literature": [],
      "urls": [
        "https://github.com/Washington-University/workbench"
      ]
    }
  },
  "command": {
    "base": {
      "id": 18,
      "name": "volume-extrema",
      "outputs": [
        {
          "id": 17,
          "name": "volume_out",
          "tokens": [
            {
              "refId": 2,
              "fileRemoveSuffixes": []
            }
          ],
          "docs": {
            "title": "volume_out",
            "description": "the output extrema volume",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        }
      ],
      "docs": {
        "title": "volume-extrema",
        "description": "Find extrema in a volume file.\n\nFinds extrema in a volume file, such that no two extrema of the same type are within <distance> of each other.  The extrema are labeled as -1 for minima, 1 for maxima, 0 otherwise.  If -only-maxima or -only-minima is specified, then it will ignore extrema not of the specified type.  These options are mutually exclusive.\n\nIf -sum-subvols is specified, these extrema subvolumes are summed, and the output has a single subvolume with this result.\n\nBy default, a datapoint is an extrema only if it is more extreme than every other datapoint that is within <distance> from it.  If -consolidate-mode is used, it instead starts by finding all datapoints that are more extreme than their immediate neighbors, then while there are any extrema within <distance> of each other, take the two extrema closest to each other and merge them into one by a weighted average based on how many original extrema have been merged into each.\n\nBy default, all input subvolumes are used with no smoothing, use -subvolume to specify a single subvolume to use, and -presmooth to smooth the input before finding the extrema.",
        "authors": [
          "Connectome Workbench Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/Washington-University/workbench"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "volume-extrema",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "wb_command"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-volume-extrema"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "volume_in",
                    "outputs": [],
                    "docs": {
                      "title": "volume_in",
                      "description": "volume file to find the extrema of",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "distance",
                    "outputs": [],
                    "docs": {
                      "title": "distance",
                      "description": "the minimum distance between identified extrema of the same type",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "volume_out",
                    "outputs": [],
                    "docs": {
                      "title": "volume_out",
                      "description": "the output extrema volume",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "presmooth",
                    "outputs": [],
                    "docs": {
                      "title": "presmooth",
                      "description": "smooth the volume before finding extrema",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "struct",
                    "name": "presmooth",
                    "globalName": null,
                    "groups": [
                      {
                        "cargs": [
                          {
                            "tokens": [
                              "-presmooth"
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      },
                      {
                        "cargs": [
                          {
                            "tokens": [
                              {
                                "base": {
                                  "id": 4,
                                  "name": "kernel",
                                  "outputs": [],
                                  "docs": {
                                    "title": "kernel",
                                    "description": "the size of the gaussian smoothing kernel in mm, as sigma by default",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "body": {
                                  "type": "float",
                                  "minValue": null,
                                  "maxValue": null
                                },
                                "list": null,
                                "nullable": false,
                                "choices": null,
                                "defaultValue": null
                              }
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      },
                      {
                        "cargs": [
                          {
                            "tokens": [
                              {
                                "base": {
                                  "id": 5,
                                  "name": "opt_fwhm",
                                  "outputs": [],
                                  "docs": {
                                    "title": "opt_fwhm",
                                    "description": "kernel size is FWHM, not sigma",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "body": {
                                  "type": "bool",
                                  "valueTrue": [
                                    "-fwhm"
                                  ],
                                  "valueFalse": []
                                },
                                "list": null,
                                "nullable": false,
                                "choices": null,
                                "defaultValue": false
                              }
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      }
                    ],
                    "join": null,
                    "docs": {
                      "title": "presmooth",
                      "description": "smooth the volume before finding extrema",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-roi"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "opt_roi_roi_volume",
                    "outputs": [],
                    "docs": {
                      "title": "opt_roi_roi_volume",
                      "description": "ignore values outside the selected area: the area to find extrema in",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "threshold",
                    "outputs": [],
                    "docs": {
                      "title": "threshold",
                      "description": "ignore small extrema",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "struct",
                    "name": "threshold",
                    "globalName": null,
                    "groups": [
                      {
                        "cargs": [
                          {
                            "tokens": [
                              "-threshold"
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      },
                      {
                        "cargs": [
                          {
                            "tokens": [
                              {
                                "base": {
                                  "id": 9,
                                  "name": "low",
                                  "outputs": [],
                                  "docs": {
                                    "title": "low",
                                    "description": "the largest value to consider for being a minimum",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "body": {
                                  "type": "float",
                                  "minValue": null,
                                  "maxValue": null
                                },
                                "list": null,
                                "nullable": false,
                                "choices": null,
                                "defaultValue": null
                              }
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      },
                      {
                        "cargs": [
                          {
                            "tokens": [
                              {
                                "base": {
                                  "id": 10,
                                  "name": "high",
                                  "outputs": [],
                                  "docs": {
                                    "title": "high",
                                    "description": "the smallest value to consider for being a maximum",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "body": {
                                  "type": "float",
                                  "minValue": null,
                                  "maxValue": null
                                },
                                "list": null,
                                "nullable": false,
                                "choices": null,
                                "defaultValue": null
                              }
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      }
                    ],
                    "join": null,
                    "docs": {
                      "title": "threshold",
                      "description": "ignore small extrema",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "opt_sum_subvols",
                    "outputs": [],
                    "docs": {
                      "title": "opt_sum_subvols",
                      "description": "output the sum of the extrema subvolumes instead of each subvolume separately",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-sum-subvols"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 13,
                    "name": "opt_consolidate_mode",
                    "outputs": [],
                    "docs": {
                      "title": "opt_consolidate_mode",
                      "description": "use consolidation of local minima instead of a large neighborhood",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-consolidate-mode"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 14,
                    "name": "opt_only_maxima",
                    "outputs": [],
                    "docs": {
                      "title": "opt_only_maxima",
                      "description": "only find the maxima",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-only-maxima"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 15,
                    "name": "opt_only_minima",
                    "outputs": [],
                    "docs": {
                      "title": "opt_only_minima",
                      "description": "only find the minima",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-only-minima"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-subvolume"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 16,
                    "name": "opt_subvolume_subvolume",
                    "outputs": [],
                    "docs": {
                      "title": "opt_subvolume_subvolume",
                      "description": "select a single subvolume to find extrema in: the subvolume number or name",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": "volume-extrema",
        "description": "Find extrema in a volume file.\n\nFinds extrema in a volume file, such that no two extrema of the same type are within <distance> of each other.  The extrema are labeled as -1 for minima, 1 for maxima, 0 otherwise.  If -only-maxima or -only-minima is specified, then it will ignore extrema not of the specified type.  These options are mutually exclusive.\n\nIf -sum-subvols is specified, these extrema subvolumes are summed, and the output has a single subvolume with this result.\n\nBy default, a datapoint is an extrema only if it is more extreme than every other datapoint that is within <distance> from it.  If -consolidate-mode is used, it instead starts by finding all datapoints that are more extreme than their immediate neighbors, then while there are any extrema within <distance> of each other, take the two extrema closest to each other and merge them into one by a weighted average based on how many original extrema have been merged into each.\n\nBy default, all input subvolumes are used with no smoothing, use -subvolume to specify a single subvolume to use, and -presmooth to smooth the input before finding the extrema.",
        "authors": [
          "Connectome Workbench Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/Washington-University/workbench"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}