{
  "uid": "5bfe688c77b83ede649dbc7e9363c5afcb76bbc3.boutiques",
  "package": {
    "name": "workbench",
    "version": "1.5.0",
    "docker": "brainlife/connectome_workbench:1.5.0-freesurfer-update",
    "docs": {
      "title": "Connectome Workbench",
      "description": "Connectome Workbench is an open source, freely available visualization and discovery tool used to map neuroimaging data, especially data generated by the Human Connectome Project. The distribution includes wb_view, a GUI-based visualiation platform, and wb_command, a command-line program for performing a variety of algorithmic tasks using volume, surface, and grayordinate data. wb_command is necessary for running HCP data processing pipelines.",
      "authors": [],
      "literature": [],
      "urls": [
        "https://github.com/Washington-University/workbench"
      ]
    }
  },
  "command": {
    "base": {
      "id": 14,
      "name": "cifti-math",
      "outputs": [
        {
          "id": 13,
          "name": "cifti_out",
          "tokens": [
            {
              "refId": 1,
              "fileRemoveSuffixes": []
            }
          ],
          "docs": {
            "title": "cifti_out",
            "description": "the output cifti file",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        }
      ],
      "docs": {
        "title": "cifti-math",
        "description": "Evaluate expression on cifti files.\n\nThis command evaluates <expression> at each matrix element independently.  There must be at least one -var option (to get the output layout from), even if the <name> specified in it isn't used in <expression>.\n\nTo select a single column from a 2D file (most cifti files are 2D), use -select 1 <index>, where <index> is 1-based.  To select a single row from a 2D file, use -select 2 <index>.  Where -select is not used, the cifti files must have compatible mappings (e.g., brain models and parcels mappings must match exactly except for parcel names).  Use -override-mapping-check to skip this checking.\n\nFilenames are not valid in <expression>, use a variable name and a -var option with matching <name> to specify an input file.  The format of <expression> is as follows:\n\nExpressions consist of constants, variables, operators, parentheses, and functions, in infix notation, such as 'exp(-x + 3) * scale'.  Variables are strings of any length, using the characters a-z, A-Z, 0-9, and _, but may not take the name of a named constant.  Currently, there is only one named constant, PI.  The operators are +, -, *, /, ^, >, <, >=, <=, ==, !=, !, &&, ||.  These behave as in C, except that ^ is exponentiation, i.e. pow(x, y), and takes higher precedence than other binary operators (also, '-3^-4^-5' means '-(3^(-(4^-5)))').  The <=, >=, ==, and != operators are given a small amount of wiggle room, equal to one millionth of the smaller of the absolute values of the values being compared.\n\nComparison and logical operators return 0 or 1, you can do masking with expressions like 'x * (mask > 0)'.  For all logical operators, an input is considered true iff it is greater than 0.  The expression '0 < x < 5' is not syntactically wrong, but it will NOT do what is desired, because it is evaluated left to right, i.e. '((0 < x) < 5)', which will always return 1, as both possible results of a comparison are less than 5.  A warning is generated if an expression of this type is detected.  Use something like 'x > 0 && x < 5' to get the desired behavior.\n\nWhitespace between elements is ignored, ' sin ( 2 * x ) ' is equivalent to 'sin(2*x)', but 's in(2*x)' is an error.  Implied multiplication is not allowed, the expression '2x' will be parsed as a variable.  Parentheses are (), do not use [] or {}.  Functions require parentheses, the expression 'sin x' is an error.\n\nThe following functions are supported:\n\n   sin: 1 argument, the sine of the argument (units are radians)\n   cos: 1 argument, the cosine of the argument (units are radians)\n   tan: 1 argument, the tangent of the argument (units are radians)\n   asin: 1 argument, the inverse of sine of the argument, in radians\n   acos: 1 argument, the inverse of cosine of the argument, in radians\n   atan: 1 argument, the inverse of tangent of the argument, in radians\n   atan2: 2 arguments, atan2(y, x) returns the inverse of tangent of (y/x), in radians, determining quadrant by the sign of both arguments\n   sinh: 1 argument, the hyperbolic sine of the argument\n   cosh: 1 argument, the hyperbolic cosine of the argument\n   tanh: 1 argument, the hyperbolic tangent of the argument\n   asinh: 1 argument, the inverse hyperbolic sine of the argument\n   acosh: 1 argument, the inverse hyperbolic cosine of the argument\n   atanh: 1 argument, the inverse hyperbolic tangent of the argument\n   sinc: 1 argument, sinc(0) = 1, sin(x) / x otherwise\n   ln: 1 argument, the natural logarithm of the argument\n   exp: 1 argument, the constant e raised to the power of the argument\n   log: 1 argument, the base 10 logarithm of the argument\n   log2: 1 argument, the base 2 logarithm of the argument\n   sqrt: 1 argument, the square root of the argument\n   abs: 1 argument, the absolute value of the argument\n   floor: 1 argument, the largest integer not greater than the argument\n   round: 1 argument, the nearest integer, with ties rounded away from zero\n   ceil: 1 argument, the smallest integer not less than the argument\n   min: 2 arguments, min(x, y) returns y if (x > y), x otherwise\n   max: 2 arguments, max(x, y) returns y if (x < y), x otherwise\n   mod: 2 arguments, mod(x, y) = x - y * floor(x / y), or 0 if y == 0\n   clamp: 3 arguments, clamp(x, low, high) = min(max(x, low), high)\n",
        "authors": [
          "Connectome Workbench Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/Washington-University/workbench"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "cifti-math",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "wb_command"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-cifti-math"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "expression",
                    "outputs": [],
                    "docs": {
                      "title": "expression",
                      "description": "the expression to evaluate, in quotes",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "cifti_out",
                    "outputs": [],
                    "docs": {
                      "title": "cifti_out",
                      "description": "the output cifti file",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-fixnan"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "opt_fixnan_replace",
                    "outputs": [],
                    "docs": {
                      "title": "opt_fixnan_replace",
                      "description": "replace NaN results with a value: value to replace NaN with",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "opt_override_mapping_check",
                    "outputs": [],
                    "docs": {
                      "title": "opt_override_mapping_check",
                      "description": "don't check the mappings for compatibility, only check length",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-override-mapping-check"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "var",
                    "outputs": [],
                    "docs": {
                      "title": "var",
                      "description": "a cifti file to use as a variable",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "struct",
                    "name": "var",
                    "globalName": null,
                    "groups": [
                      {
                        "cargs": [
                          {
                            "tokens": [
                              "-var"
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      },
                      {
                        "cargs": [
                          {
                            "tokens": [
                              {
                                "base": {
                                  "id": 5,
                                  "name": "name",
                                  "outputs": [],
                                  "docs": {
                                    "title": "name",
                                    "description": "the name of the variable, as used in the expression",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "body": {
                                  "type": "string"
                                },
                                "list": null,
                                "nullable": false,
                                "choices": null,
                                "defaultValue": null
                              }
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      },
                      {
                        "cargs": [
                          {
                            "tokens": [
                              {
                                "base": {
                                  "id": 6,
                                  "name": "cifti",
                                  "outputs": [],
                                  "docs": {
                                    "title": "cifti",
                                    "description": "the cifti file to use as this variable",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "body": {
                                  "type": "file",
                                  "resolveParent": false,
                                  "mutable": false,
                                  "mediaTypes": []
                                },
                                "list": null,
                                "nullable": false,
                                "choices": null,
                                "defaultValue": null
                              }
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      },
                      {
                        "cargs": [
                          {
                            "tokens": [
                              {
                                "base": {
                                  "id": 11,
                                  "name": "select",
                                  "outputs": [],
                                  "docs": {
                                    "title": "select",
                                    "description": "select a single index from a dimension",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "body": {
                                  "type": "struct",
                                  "name": "select",
                                  "globalName": null,
                                  "groups": [
                                    {
                                      "cargs": [
                                        {
                                          "tokens": [
                                            "-select"
                                          ],
                                          "join": null
                                        }
                                      ],
                                      "join": null
                                    },
                                    {
                                      "cargs": [
                                        {
                                          "tokens": [
                                            {
                                              "base": {
                                                "id": 8,
                                                "name": "dim",
                                                "outputs": [],
                                                "docs": {
                                                  "title": "dim",
                                                  "description": "the dimension to select from (1-based)",
                                                  "authors": [],
                                                  "literature": [],
                                                  "urls": []
                                                }
                                              },
                                              "body": {
                                                "type": "int",
                                                "minValue": null,
                                                "maxValue": null
                                              },
                                              "list": null,
                                              "nullable": false,
                                              "choices": null,
                                              "defaultValue": null
                                            }
                                          ],
                                          "join": null
                                        }
                                      ],
                                      "join": null
                                    },
                                    {
                                      "cargs": [
                                        {
                                          "tokens": [
                                            {
                                              "base": {
                                                "id": 9,
                                                "name": "index",
                                                "outputs": [],
                                                "docs": {
                                                  "title": "index",
                                                  "description": "the index number (1-based) or map name to use",
                                                  "authors": [],
                                                  "literature": [],
                                                  "urls": []
                                                }
                                              },
                                              "body": {
                                                "type": "string"
                                              },
                                              "list": null,
                                              "nullable": false,
                                              "choices": null,
                                              "defaultValue": null
                                            }
                                          ],
                                          "join": null
                                        }
                                      ],
                                      "join": null
                                    },
                                    {
                                      "cargs": [
                                        {
                                          "tokens": [
                                            {
                                              "base": {
                                                "id": 10,
                                                "name": "opt_repeat",
                                                "outputs": [],
                                                "docs": {
                                                  "title": "opt_repeat",
                                                  "description": "repeat the selected values for each index of output in this dimension",
                                                  "authors": [],
                                                  "literature": [],
                                                  "urls": []
                                                }
                                              },
                                              "body": {
                                                "type": "bool",
                                                "valueTrue": [
                                                  "-repeat"
                                                ],
                                                "valueFalse": []
                                              },
                                              "list": null,
                                              "nullable": false,
                                              "choices": null,
                                              "defaultValue": false
                                            }
                                          ],
                                          "join": null
                                        }
                                      ],
                                      "join": null
                                    }
                                  ],
                                  "join": null,
                                  "docs": {
                                    "title": "select",
                                    "description": "select a single index from a dimension",
                                    "authors": [],
                                    "literature": [],
                                    "urls": []
                                  }
                                },
                                "list": {
                                  "countMin": null,
                                  "countMax": null,
                                  "join": null
                                },
                                "nullable": true,
                                "choices": null,
                                "defaultValue": {
                                  "_special": "SET_TO_NONE"
                                }
                              }
                            ],
                            "join": null
                          }
                        ],
                        "join": null
                      }
                    ],
                    "join": null,
                    "docs": {
                      "title": "var",
                      "description": "a cifti file to use as a variable",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": "cifti-math",
        "description": "Evaluate expression on cifti files.\n\nThis command evaluates <expression> at each matrix element independently.  There must be at least one -var option (to get the output layout from), even if the <name> specified in it isn't used in <expression>.\n\nTo select a single column from a 2D file (most cifti files are 2D), use -select 1 <index>, where <index> is 1-based.  To select a single row from a 2D file, use -select 2 <index>.  Where -select is not used, the cifti files must have compatible mappings (e.g., brain models and parcels mappings must match exactly except for parcel names).  Use -override-mapping-check to skip this checking.\n\nFilenames are not valid in <expression>, use a variable name and a -var option with matching <name> to specify an input file.  The format of <expression> is as follows:\n\nExpressions consist of constants, variables, operators, parentheses, and functions, in infix notation, such as 'exp(-x + 3) * scale'.  Variables are strings of any length, using the characters a-z, A-Z, 0-9, and _, but may not take the name of a named constant.  Currently, there is only one named constant, PI.  The operators are +, -, *, /, ^, >, <, >=, <=, ==, !=, !, &&, ||.  These behave as in C, except that ^ is exponentiation, i.e. pow(x, y), and takes higher precedence than other binary operators (also, '-3^-4^-5' means '-(3^(-(4^-5)))').  The <=, >=, ==, and != operators are given a small amount of wiggle room, equal to one millionth of the smaller of the absolute values of the values being compared.\n\nComparison and logical operators return 0 or 1, you can do masking with expressions like 'x * (mask > 0)'.  For all logical operators, an input is considered true iff it is greater than 0.  The expression '0 < x < 5' is not syntactically wrong, but it will NOT do what is desired, because it is evaluated left to right, i.e. '((0 < x) < 5)', which will always return 1, as both possible results of a comparison are less than 5.  A warning is generated if an expression of this type is detected.  Use something like 'x > 0 && x < 5' to get the desired behavior.\n\nWhitespace between elements is ignored, ' sin ( 2 * x ) ' is equivalent to 'sin(2*x)', but 's in(2*x)' is an error.  Implied multiplication is not allowed, the expression '2x' will be parsed as a variable.  Parentheses are (), do not use [] or {}.  Functions require parentheses, the expression 'sin x' is an error.\n\nThe following functions are supported:\n\n   sin: 1 argument, the sine of the argument (units are radians)\n   cos: 1 argument, the cosine of the argument (units are radians)\n   tan: 1 argument, the tangent of the argument (units are radians)\n   asin: 1 argument, the inverse of sine of the argument, in radians\n   acos: 1 argument, the inverse of cosine of the argument, in radians\n   atan: 1 argument, the inverse of tangent of the argument, in radians\n   atan2: 2 arguments, atan2(y, x) returns the inverse of tangent of (y/x), in radians, determining quadrant by the sign of both arguments\n   sinh: 1 argument, the hyperbolic sine of the argument\n   cosh: 1 argument, the hyperbolic cosine of the argument\n   tanh: 1 argument, the hyperbolic tangent of the argument\n   asinh: 1 argument, the inverse hyperbolic sine of the argument\n   acosh: 1 argument, the inverse hyperbolic cosine of the argument\n   atanh: 1 argument, the inverse hyperbolic tangent of the argument\n   sinc: 1 argument, sinc(0) = 1, sin(x) / x otherwise\n   ln: 1 argument, the natural logarithm of the argument\n   exp: 1 argument, the constant e raised to the power of the argument\n   log: 1 argument, the base 10 logarithm of the argument\n   log2: 1 argument, the base 2 logarithm of the argument\n   sqrt: 1 argument, the square root of the argument\n   abs: 1 argument, the absolute value of the argument\n   floor: 1 argument, the largest integer not greater than the argument\n   round: 1 argument, the nearest integer, with ties rounded away from zero\n   ceil: 1 argument, the smallest integer not less than the argument\n   min: 2 arguments, min(x, y) returns y if (x > y), x otherwise\n   max: 2 arguments, max(x, y) returns y if (x < y), x otherwise\n   mod: 2 arguments, mod(x, y) = x - y * floor(x / y), or 0 if y == 0\n   clamp: 3 arguments, clamp(x, low, high) = min(max(x, low), high)\n",
        "authors": [
          "Connectome Workbench Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/Washington-University/workbench"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}