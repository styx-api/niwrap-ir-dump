{
  "uid": "bce786a5067ed7717ffe2af0c0412eb468654e62.boutiques",
  "package": {
    "name": "afni",
    "version": "24.2.06",
    "docker": "afni/afni_make_build:AFNI_24.2.06",
    "docs": {
      "title": "AFNI",
      "description": "AFNI (Analysis of Functional NeuroImages) is a leading software suite of C, Python, R programs and shell scripts primarily developed for the analysis and display of multiple MRI modalities: anatomical, functional MRI (FMRI) and diffusion weighted (DW) data. It is freely available (both as open source code and as precompiled binaries) for research purposes. The software is made to run on virtually any Unix system with X11 and Motif displays. Binary packages are provided for MacOS and Linux systems such as Fedora, CentOS/Red Hat and Ubuntu (which includes the Windows Subsystem for Linux).",
      "authors": [],
      "literature": [],
      "urls": [
        "https://afni.nimh.nih.gov/"
      ]
    }
  },
  "command": {
    "base": {
      "id": 26,
      "name": "imcat",
      "outputs": [
        {
          "id": 25,
          "name": "output_image_file",
          "tokens": [
            {
              "refId": 18,
              "fileRemoveSuffixes": []
            },
            "output_image.[EXT]"
          ],
          "docs": {
            "title": "Output image file",
            "description": "Output image file",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "Assembles a set of images into an image matrix (IM) montage of NX by NY images.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "imcat",
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "imcat"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "input_files",
                    "outputs": [],
                    "docs": {
                      "title": "Input files",
                      "description": "Input image files",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-scale_image"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "scale_image",
                    "outputs": [],
                    "docs": {
                      "title": "Scale image",
                      "description": "Multiply each image IM(i,j) in output image matrix IM by the color or intensity of the pixel (i,j) in SCALE_IMG.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-scale_pixels"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "scale_pixels",
                    "outputs": [],
                    "docs": {
                      "title": "Scale pixels",
                      "description": "Multiply each pixel (i,j) in output image by the color or intensity of the pixel (i,j) in SCALE_IMG. SCALE_IMG is automatically resized to the resolution of the output image.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "scale_intensity",
                    "outputs": [],
                    "docs": {
                      "title": "Scale intensity flag",
                      "description": "Instead of multiplying by the color of pixel (i,j), use its intensity (average color).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-scale_intensity"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-gscale"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "gscale",
                    "outputs": [],
                    "docs": {
                      "title": "Global scale factor",
                      "description": "Apply FAC in addition to scaling of -scale_* options.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "rgb_out",
                    "outputs": [],
                    "docs": {
                      "title": "RGB output flag",
                      "description": "Force output to be in RGB, even if input is bytes. This option is turned on automatically in certain cases.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-rgb_out"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-res_in"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "res_in",
                    "outputs": [],
                    "docs": {
                      "title": "Input resolution",
                      "description": "Set resolution of all input images to RX by RY pixels. Default is to make all input have the same resolution as the first image.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": null,
                    "countMax": 2,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-respad_in"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "respad_in",
                    "outputs": [],
                    "docs": {
                      "title": "Input resolution with padding",
                      "description": "Like -res_in, but resample to the max while respecting the aspect ratio, and then pad to achieve desired pixel count.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": null,
                    "countMax": 2,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-pad_val"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "pad_val",
                    "outputs": [],
                    "docs": {
                      "title": "Padding value",
                      "description": "Set the padding value, should it be needed by -respad_in to VAL. VAL is typecast to byte, default is 0, max is 255.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": 0,
                    "maxValue": 255
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-crop"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "crop",
                    "outputs": [],
                    "docs": {
                      "title": "Crop parameters",
                      "description": "Crop images by L (Left), R (Right), T (Top), B (Bottom) pixels. Cutting is performed after any resolution change, if any, is to be done.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": null,
                    "countMax": 4,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-autocrop_ctol"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "autocrop_ctol",
                    "outputs": [],
                    "docs": {
                      "title": "Autocrop color tolerance",
                      "description": "A line is eliminated if none of its R G B values differ by more than CTOL% from those of the corner pixel.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-autocrop_atol"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "autocrop_atol",
                    "outputs": [],
                    "docs": {
                      "title": "Autocrop average tolerance",
                      "description": "A line is eliminated if none of its R G B values differ by more than ATOL% from those of line average.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "autocrop",
                    "outputs": [],
                    "docs": {
                      "title": "Autocrop flag",
                      "description": "This option is the same as using both of -autocrop_atol 20 and -autocrop_ctol 20",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-autocrop"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 13,
                    "name": "zero_wrap",
                    "outputs": [],
                    "docs": {
                      "title": "Zero wrap flag",
                      "description": "If number of images is not enough to fill matrix solid black images are used.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-zero_wrap"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 14,
                    "name": "white_wrap",
                    "outputs": [],
                    "docs": {
                      "title": "White wrap flag",
                      "description": "If number of images is not enough to fill matrix solid white images are used.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-white_wrap"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-gray_wrap"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 15,
                    "name": "gray_wrap",
                    "outputs": [],
                    "docs": {
                      "title": "Gray wrap value",
                      "description": "If number of images is not enough to fill matrix, solid gray images are used. GRAY must be between 0 and 1.0.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": 0.0,
                    "maxValue": 1.0
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 16,
                    "name": "image_wrap",
                    "outputs": [],
                    "docs": {
                      "title": "Image wrap flag",
                      "description": "If number of images is not enough to fill matrix, images on command line are reused (default).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-image_wrap"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 17,
                    "name": "rand_wrap",
                    "outputs": [],
                    "docs": {
                      "title": "Random wrap flag",
                      "description": "When reusing images to fill matrix, randomize the order in refill section only.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-rand_wrap"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-prefix"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 18,
                    "name": "prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Prefix",
                      "description": "Prefix the output files with string 'ppp'.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-matrix"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 19,
                    "name": "matrix",
                    "outputs": [],
                    "docs": {
                      "title": "Matrix dimensions",
                      "description": "Specify number of images in each row and column of IM at the same time.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": null,
                    "countMax": 2,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-nx"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 20,
                    "name": "nx",
                    "outputs": [],
                    "docs": {
                      "title": "Number of rows",
                      "description": "Number of images in each row.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-ny"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 21,
                    "name": "ny",
                    "outputs": [],
                    "docs": {
                      "title": "Number of columns",
                      "description": "Number of images in each column.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 22,
                    "name": "matrix_from_scale",
                    "outputs": [],
                    "docs": {
                      "title": "Matrix from scale flag",
                      "description": "Set NX and NY to be the same as the SCALE_IMG's dimensions. (needs -scale_image)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-matrix_from_scale"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-gap"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 23,
                    "name": "gap",
                    "outputs": [],
                    "docs": {
                      "title": "Gap width",
                      "description": "Put a line G pixels wide between images.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-gap_col"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 24,
                    "name": "gap_col",
                    "outputs": [],
                    "docs": {
                      "title": "Gap color",
                      "description": "Set color of line to R G B values. Values range between 0 and 255.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": null,
                    "countMax": 3,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "Assembles a set of images into an image matrix (IM) montage of NX by NY images.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}