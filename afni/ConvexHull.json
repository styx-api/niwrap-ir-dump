{
  "uid": "79e3bac48907406f7ee6520d509c9b76000ff72f.boutiques",
  "command": {
    "base": {
      "id": 17,
      "name": "ConvexHull",
      "outputs": [
        {
          "id": 16,
          "name": "out_surf",
          "tokens": [
            {
              "refId": 12,
              "fileRemoveSuffixes": [],
              "fallback": null
            }
          ],
          "docs": {
            "title": "Output surface",
            "description": "Output surface file",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        }
      ],
      "docs": {
        "title": "ConvexHull",
        "description": "A program to find the convex hull, or perform a Delaunay triangulation of a set of points.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "ConvexHull",
      "publicName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "ConvexHull"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-input"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "vol",
                    "outputs": [],
                    "docs": {
                      "title": "Volume input",
                      "description": "Input AFNI (or AFNI readable) volume.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-isoval"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "isoval",
                    "outputs": [],
                    "docs": {
                      "title": "Isovalue",
                      "description": "Create isosurface where volume = V",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-isorange"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "isorange",
                    "outputs": [],
                    "docs": {
                      "title": "Isorange",
                      "description": "Create isosurface where V0 <= volume < V1",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": 2,
                    "countMax": 2,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-isocmask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "isocmask",
                    "outputs": [],
                    "docs": {
                      "title": "Isocmask",
                      "description": "Create isosurface where MASK_COM != 0. Example: -isocmask '-a VOL+orig -expr (1-bool(a-V))' is equivalent to using -isoval V. NOTE: Allowed only with -xform mask",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-xform"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "xform",
                    "outputs": [],
                    "docs": {
                      "title": "Transform",
                      "description": "Transform to apply to volume values before searching for sign change boundary. Options: mask, shift, none",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-i_TYPE"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "surface_input",
                    "outputs": [],
                    "docs": {
                      "title": "Surface input",
                      "description": "Input surface type",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-sv"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "surf_vol",
                    "outputs": [],
                    "docs": {
                      "title": "Surface volume",
                      "description": "Specify a surface volume which contains a transform to apply to the surface node coordinates",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-input_1D"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "input_1d",
                    "outputs": [],
                    "docs": {
                      "title": "Input 1D",
                      "description": "Construct the triangulation of the points contained in 1D file XYZ. Use AFNI's [] selectors to specify the XYZ columns.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-q_opt"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "q_opt",
                    "outputs": [],
                    "docs": {
                      "title": "Q option",
                      "description": "Meshing option OPT. Options: convex_hull, triangulate_xy",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "proj_xy",
                    "outputs": [],
                    "docs": {
                      "title": "Project XY",
                      "description": "Project points onto plane whose normal is the third principal component. Then rotate projection so that plane is parallel to Z = constant.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-proj_xy"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "orig_coord",
                    "outputs": [],
                    "docs": {
                      "title": "Original Coordinates",
                      "description": "Use original coordinates when writing surface, not transformed ones.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-orig_coord"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-these_coords"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "these_coords",
                    "outputs": [],
                    "docs": {
                      "title": "Coordinates",
                      "description": "Use coordinates in COORDS.1D when writing surface.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-o_TYPE"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "output_prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Output prefix",
                      "description": "Prefix of output surface. Specifies the format and prefix of the surface.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-debug"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 13,
                    "name": "debug",
                    "outputs": [],
                    "docs": {
                      "title": "Debug level",
                      "description": "Debugging level.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 14,
                    "name": "novolreg",
                    "outputs": [],
                    "docs": {
                      "title": "Ignore transformations",
                      "description": "Ignore any Rotate, Volreg, Tagalign, or WarpDrive transformations present in the Surface Volume.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-novolreg"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-setenv"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 15,
                    "name": "setenv",
                    "outputs": [],
                    "docs": {
                      "title": "Set environment variable",
                      "description": "Set environment variable ENVname to be ENVvalue.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": "ConvexHull",
        "description": "A program to find the convex hull, or perform a Delaunay triangulation of a set of points.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "captureStdout": null,
  "captureStderr": null,
  "project": {
    "name": "unknown",
    "version": "0.1.0",
    "docs": {
      "title": null,
      "description": null,
      "authors": [],
      "literature": [],
      "urls": []
    },
    "license": null,
    "extras": {}
  },
  "_sSetUp": false
}