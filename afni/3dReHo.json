{
  "uid": "3a27e09e4e1a042595724b1260fd5708eb32b082.boutiques",
  "package": {
    "name": "afni",
    "version": "24.2.06",
    "docker": "afni/afni_make_build:AFNI_24.2.06",
    "docs": {
      "title": "AFNI",
      "description": "AFNI (Analysis of Functional NeuroImages) is a leading software suite of C, Python, R programs and shell scripts primarily developed for the analysis and display of multiple MRI modalities: anatomical, functional MRI (FMRI) and diffusion weighted (DW) data. It is freely available (both as open source code and as precompiled binaries) for research purposes. The software is made to run on virtually any Unix system with X11 and Motif displays. Binary packages are provided for MacOS and Linux systems such as Fedora, CentOS/Red Hat and Ubuntu (which includes the Windows Subsystem for Linux).",
      "authors": [],
      "literature": [],
      "urls": [
        "https://afni.nimh.nih.gov/"
      ]
    }
  },
  "command": {
    "base": {
      "id": 18,
      "name": "3dReHo",
      "outputs": [
        {
          "id": 14,
          "name": "reho_output",
          "tokens": [
            {
              "refId": 0,
              "fileRemoveSuffixes": []
            },
            "+orig.BRIK"
          ],
          "docs": {
            "title": "ReHo Output File",
            "description": "Output file containing ReHo/Kendall's W value per voxel.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        },
        {
          "id": 15,
          "name": "roi_reho_vals",
          "tokens": [
            {
              "refId": 0,
              "fileRemoveSuffixes": []
            },
            "_ROI_reho.vals"
          ],
          "docs": {
            "title": "ROI ReHo Values File",
            "description": "List of ROI ReHo values.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        },
        {
          "id": 16,
          "name": "chi_square",
          "tokens": [
            {
              "refId": 0,
              "fileRemoveSuffixes": []
            },
            "+orig.BRIK[1]"
          ],
          "docs": {
            "title": "Chi-Square Output File",
            "description": "Optional output subbrick containing Friedman chi-square value per voxel.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        },
        {
          "id": 17,
          "name": "roi_chi_vals",
          "tokens": [
            {
              "refId": 0,
              "fileRemoveSuffixes": []
            },
            "_ROI_reho.chi"
          ],
          "docs": {
            "title": "ROI Chi-Square Values File",
            "description": "ROI Chi-square values file.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "3dReHo calculates Kendall's W per voxel using neighborhood voxels from 4D time series data set.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "3dReHo",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "3dReHo"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-prefix"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Prefix",
                      "description": "Output file name part.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-inset"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "inset",
                    "outputs": [],
                    "docs": {
                      "title": "Input Time Series File",
                      "description": "Time series input file.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-nneigh"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "nneigh",
                    "outputs": [],
                    "docs": {
                      "title": "Neighborhood Voxel Count",
                      "description": "Number of voxels in neighborhood, inclusive; can be 7 (for facewise neighbors), 19 (for face- and edge-wise neighbors), 27 (for face-, edge-, and node-wise neighbors). Default is 27.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "chi_sq",
                    "outputs": [],
                    "docs": {
                      "title": "Friedman Chi-Square Output Flag",
                      "description": "Switch to output Friedman chi-square value per voxel as a subbrick.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-chi_sq"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-mask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "mask",
                    "outputs": [],
                    "docs": {
                      "title": "Mask File",
                      "description": "Include a whole brain mask within which to calculate ReHo. Otherwise, data should be masked already.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-neigh_RAD"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "neigh_rad",
                    "outputs": [],
                    "docs": {
                      "title": "Neighborhood Radius",
                      "description": "Radius R of a desired neighborhood for voxelwise control, must be a floating point number >1. Examples: R=2.0 -> V=33, R=2.3 -> V=57, etc.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-neigh_X"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "neigh_x",
                    "outputs": [],
                    "docs": {
                      "title": "Neighborhood Semi-radius X",
                      "description": "Semi-radius length A for ellipsoidal neighborhood.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-neigh_Y"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "neigh_y",
                    "outputs": [],
                    "docs": {
                      "title": "Neighborhood Semi-radius Y",
                      "description": "Semi-radius length B for ellipsoidal neighborhood.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-neigh_Z"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "neigh_z",
                    "outputs": [],
                    "docs": {
                      "title": "Neighborhood Semi-radius Z",
                      "description": "Semi-radius length C for ellipsoidal neighborhood.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-box_RAD"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "box_rad",
                    "outputs": [],
                    "docs": {
                      "title": "Cubic Box Radius",
                      "description": "Cubic box radius BR centered on a given voxel for neighborhood control. Examples: BR=1 -> V=27, BR=2 -> V=125, etc.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-box_X"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "box_x",
                    "outputs": [],
                    "docs": {
                      "title": "Box Volume X",
                      "description": "Box volume neighborhood dimension X. Values put in get added in the +/- directions of each axis.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-box_Y"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "box_y",
                    "outputs": [],
                    "docs": {
                      "title": "Box Volume Y",
                      "description": "Box volume neighborhood dimension Y. Values put in get added in the +/- directions of each axis.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-box_Z"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "box_z",
                    "outputs": [],
                    "docs": {
                      "title": "Box Volume Z",
                      "description": "Box volume neighborhood dimension Z. Values put in get added in the +/- directions of each axis.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-in_rois"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 13,
                    "name": "in_rois",
                    "outputs": [],
                    "docs": {
                      "title": "ROIs Input File",
                      "description": "Input a set of ROIs, each labeled with distinct integers. ReHo will be calculated per ROI.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "3dReHo calculates Kendall's W per voxel using neighborhood voxels from 4D time series data set.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}