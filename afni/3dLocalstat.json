{
  "uid": "b6832c9a6c0ede2cc09453d38680dba0ddb4cbb6.boutiques",
  "package": {
    "name": "afni",
    "version": "24.2.06",
    "docker": "afni/afni_make_build:AFNI_24.2.06",
    "docs": {
      "title": "AFNI",
      "description": "AFNI (Analysis of Functional NeuroImages) is a leading software suite of C, Python, R programs and shell scripts primarily developed for the analysis and display of multiple MRI modalities: anatomical, functional MRI (FMRI) and diffusion weighted (DW) data. It is freely available (both as open source code and as precompiled binaries) for research purposes. The software is made to run on virtually any Unix system with X11 and Motif displays. Binary packages are provided for MacOS and Linux systems such as Fedora, CentOS/Red Hat and Ubuntu (which includes the Windows Subsystem for Linux).",
      "authors": [],
      "literature": [],
      "urls": [
        "https://afni.nimh.nih.gov/"
      ]
    }
  },
  "command": {
    "base": {
      "id": 21,
      "name": "3dLocalstat",
      "outputs": [
        {
          "id": 20,
          "name": "outfile",
          "tokens": [
            {
              "refId": 6,
              "fileRemoveSuffixes": []
            },
            ".nii.gz"
          ],
          "docs": {
            "title": "Output dataset",
            "description": "Output dataset",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "This program computes statistics at each voxel, based on a local neighborhood of that voxel",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "3dLocalstat",
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "3dLocalstat"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "dataset",
                    "outputs": [],
                    "docs": {
                      "title": "Input dataset",
                      "description": "Input dataset",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-nbhd"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "nbhd",
                    "outputs": [],
                    "docs": {
                      "title": "Neighborhood definition",
                      "description": "The region around each voxel that will be extracted for the statistics calculation",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-stat"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "stat",
                    "outputs": [],
                    "docs": {
                      "title": "Statistic",
                      "description": "Compute the specified statistic on the values extracted from the neighborhood",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-mask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "mask",
                    "outputs": [],
                    "docs": {
                      "title": "Mask dataset",
                      "description": "Read in dataset 'mset' and use the nonzero voxels therein as a mask",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "automask",
                    "outputs": [],
                    "docs": {
                      "title": "Automask",
                      "description": "Compute the mask as in program 3dAutomask (mutually exclusive with -mask)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-automask"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "use_nonmask",
                    "outputs": [],
                    "docs": {
                      "title": "Use nonmask",
                      "description": "Compute local statistics from all voxels in the neighborhood that are in the mask, even if the central voxel is not in the mask",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-use_nonmask"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-prefix"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Prefix",
                      "description": "Use the given string as the prefix for the output dataset",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-datum"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "datum",
                    "outputs": [],
                    "docs": {
                      "title": "Datum type",
                      "description": "Coerce the output data to be stored as the given type (byte, short, float)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-label_ext"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "label_ext",
                    "outputs": [],
                    "docs": {
                      "title": "Label extension",
                      "description": "Append given label to each sub-brick label",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-reduce_grid"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "reduce_grid",
                    "outputs": [],
                    "docs": {
                      "title": "Reduce grid",
                      "description": "Compute output on a grid that is reduced by the given factor in X, Y, and Z directions of the input dataset",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": 1,
                    "countMax": 3,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-reduce_restore_grid"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "reduce_restore_grid",
                    "outputs": [],
                    "docs": {
                      "title": "Reduce restore grid",
                      "description": "Resample the output back to input grid after reducing the grid",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": {
                    "countMin": 1,
                    "countMax": 3,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-reduce_max_vox"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "reduce_max_vox",
                    "outputs": [],
                    "docs": {
                      "title": "Reduce max voxels",
                      "description": "Automatically set Rx Ry Rz so that the computation grid is at a resolution of nbhd/MAX_VOX voxels",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-grid_rmode"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "grid_rmode",
                    "outputs": [],
                    "docs": {
                      "title": "Grid resample mode",
                      "description": "Interpolant to use when resampling the output with reduce_restore_grid option",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 13,
                    "name": "quiet",
                    "outputs": [],
                    "docs": {
                      "title": "Quiet mode",
                      "description": "Stop the highly informative progress reports",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-quiet"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 14,
                    "name": "verbose",
                    "outputs": [],
                    "docs": {
                      "title": "Verbose mode",
                      "description": "A little more verbose output",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-verb"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 15,
                    "name": "proceed_small_N",
                    "outputs": [],
                    "docs": {
                      "title": "Proceed with small neighborhood",
                      "description": "Do not crash if neighborhood is too small for certain estimates",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-proceed_small_N"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-fillvalue"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 16,
                    "name": "fillvalue",
                    "outputs": [],
                    "docs": {
                      "title": "Fill value",
                      "description": "Value used for filled statistic, default=1",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-unfillvalue"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 17,
                    "name": "unfillvalue",
                    "outputs": [],
                    "docs": {
                      "title": "Unfill value",
                      "description": "Value used for unfilled statistic, default=1",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-maskvalue"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 18,
                    "name": "maskvalue",
                    "outputs": [],
                    "docs": {
                      "title": "Mask value",
                      "description": "Value searched for with has_mask option",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-maskvalue2"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 19,
                    "name": "maskvalue2",
                    "outputs": [],
                    "docs": {
                      "title": "Mask value 2",
                      "description": "Alternate value for has_mask2 option",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "This program computes statistics at each voxel, based on a local neighborhood of that voxel",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}