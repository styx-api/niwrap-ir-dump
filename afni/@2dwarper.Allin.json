{
  "uid": "5efa97bed55735b8ea9da82ded571c3714029a2b.boutiques",
  "package": {
    "name": "afni",
    "version": "24.2.06",
    "docker": "afni/afni_make_build:AFNI_24.2.06",
    "docs": {
      "title": "AFNI",
      "description": "AFNI (Analysis of Functional NeuroImages) is a leading software suite of C, Python, R programs and shell scripts primarily developed for the analysis and display of multiple MRI modalities: anatomical, functional MRI (FMRI) and diffusion weighted (DW) data. It is freely available (both as open source code and as precompiled binaries) for research purposes. The software is made to run on virtually any Unix system with X11 and Motif displays. Binary packages are provided for MacOS and Linux systems such as Fedora, CentOS/Red Hat and Ubuntu (which includes the Windows Subsystem for Linux).",
      "authors": [],
      "literature": [],
      "urls": [
        "https://afni.nimh.nih.gov/"
      ]
    }
  },
  "command": {
    "base": {
      "id": 5,
      "name": "@2dwarper.Allin",
      "outputs": [
        {
          "id": 3,
          "name": "reg_output",
          "tokens": [
            {
              "refId": 2,
              "fileRemoveSuffixes": []
            },
            "_reg+orig.HEAD"
          ],
          "docs": {
            "title": "Registered Output Dataset",
            "description": "Output registered dataset",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        },
        {
          "id": 4,
          "name": "param_files",
          "tokens": [
            {
              "refId": 2,
              "fileRemoveSuffixes": []
            },
            "_param_*.1D"
          ],
          "docs": {
            "title": "Output Parameter Files",
            "description": "Output registration parameter files",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        }
      ],
      "docs": {
        "title": "@2dwarper.Allin",
        "description": "Perform 2D registration on each slice of a 3D+time dataset, and combine the results.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "@2dwarper.Allin",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "@2dwarper.Allin"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "input_prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Input Prefix",
                      "description": "Prefix for the input 3D+time dataset",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-mask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "mask_prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Mask Prefix",
                      "description": "Prefix of an existing mask dataset",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-prefix"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "output_prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Output Prefix",
                      "description": "Prefix for output datasets",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": "@2dwarper.Allin",
        "description": "Perform 2D registration on each slice of a 3D+time dataset, and combine the results.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}