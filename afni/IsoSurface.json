{
  "uid": "891f1d7b5d35cf767a77b8a6bbe7028a6cad880f.boutiques",
  "package": {
    "name": "afni",
    "version": "24.2.06",
    "docker": "afni/afni_make_build:AFNI_24.2.06",
    "docs": {
      "title": "AFNI",
      "description": "AFNI (Analysis of Functional NeuroImages) is a leading software suite of C, Python, R programs and shell scripts primarily developed for the analysis and display of multiple MRI modalities: anatomical, functional MRI (FMRI) and diffusion weighted (DW) data. It is freely available (both as open source code and as precompiled binaries) for research purposes. The software is made to run on virtually any Unix system with X11 and Motif displays. Binary packages are provided for MacOS and Linux systems such as Fedora, CentOS/Red Hat and Ubuntu (which includes the Windows Subsystem for Linux).",
      "authors": [],
      "literature": [],
      "urls": [
        "https://afni.nimh.nih.gov/"
      ]
    }
  },
  "command": {
    "base": {
      "id": 17,
      "name": "IsoSurface",
      "outputs": [
        {
          "id": 14,
          "name": "output_surface_ply",
          "tokens": [
            "[MASK]_surf.ply"
          ],
          "docs": {
            "title": "Output Surface PLY",
            "description": "Output isosurface in PLY format.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        },
        {
          "id": 15,
          "name": "output_surface_gii",
          "tokens": [
            "[MASK]_surf.gii"
          ],
          "docs": {
            "title": "Output Surface GIFTI",
            "description": "Output isosurface in GIFTI format.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        },
        {
          "id": 16,
          "name": "output_surface_stl",
          "tokens": [
            "[MASK]_surf.stl"
          ],
          "docs": {
            "title": "Output Surface STL",
            "description": "Output isosurface in STL format.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "A program to perform isosurface extraction from a volume.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "IsoSurface",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "IsoSurface"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-input"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "input_vol",
                    "outputs": [],
                    "docs": {
                      "title": "Input Volume",
                      "description": "Input volume file.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-shape"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "shape_spec",
                    "outputs": [],
                    "docs": {
                      "title": "Shape Specification",
                      "description": "Built-in shape specification.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "isorois",
                    "outputs": [],
                    "docs": {
                      "title": "Isosurface for unique values",
                      "description": "Create isosurface for each unique value in the input volume.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-isorois"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-isoval"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "isoval",
                    "outputs": [],
                    "docs": {
                      "title": "Isoval",
                      "description": "Create isosurface where volume = V.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-isorange"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "isorange",
                    "outputs": [],
                    "docs": {
                      "title": "Isorange",
                      "description": "Create isosurface where V0 <= volume < V1.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-isocmask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "isocmask",
                    "outputs": [],
                    "docs": {
                      "title": "Isocmask",
                      "description": "Create isosurface where MASK_COM != 0.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-o_TYPE"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "output_prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Output Prefix",
                      "description": "Prefix of output surface file.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-Tsmooth"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "tsmooth",
                    "outputs": [],
                    "docs": {
                      "title": "Taubin Smoothing",
                      "description": "Smooth resultant surface using Taubin smoothing with parameters KPB and NITER.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-debug"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "debug",
                    "outputs": [],
                    "docs": {
                      "title": "Debug",
                      "description": "Debug levels of 0 (default), 1, 2, 3.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "autocrop",
                    "outputs": [],
                    "docs": {
                      "title": "Autocrop",
                      "description": "Crop input volume before extraction.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-autocrop"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-remesh"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "remesh",
                    "outputs": [],
                    "docs": {
                      "title": "Remesh",
                      "description": "Remesh the surface(s).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-xform"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "xform",
                    "outputs": [],
                    "docs": {
                      "title": "Transform",
                      "description": "Transform to apply to volume values before extracting.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "novolreg",
                    "outputs": [],
                    "docs": {
                      "title": "No Volreg Transform",
                      "description": "Ignore any Rotate, Volreg, Tagalign, or WarpDrive transformations.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-novolreg"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 13,
                    "name": "noxform",
                    "outputs": [],
                    "docs": {
                      "title": "No Transform",
                      "description": "Same as -novolreg.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-noxform"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "A program to perform isosurface extraction from a volume.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}