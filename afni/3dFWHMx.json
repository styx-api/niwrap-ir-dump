{
  "uid": "408b0ca2210d336d7abec8bdaf127930c857b898.boutiques",
  "command": {
    "base": {
      "id": 15,
      "name": "3dFWHMx",
      "outputs": [
        {
          "id": 13,
          "name": "out_file",
          "tokens": [
            {
              "refId": 9,
              "fileRemoveSuffixes": [],
              "fallback": null
            },
            ".1D"
          ],
          "docs": {
            "title": "Output file",
            "description": "Output file containing FWHM/ACF estimates",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        },
        {
          "id": 14,
          "name": "detrended_dataset",
          "tokens": [
            {
              "refId": 5,
              "fileRemoveSuffixes": [],
              "fallback": null
            },
            ".nii.gz"
          ],
          "docs": {
            "title": "Detrended dataset",
            "description": "Detrended dataset file",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        }
      ],
      "docs": {
        "title": "3dFWHMx",
        "description": "Compute Full Width at Half Maximum (FWHM) for FMRI datasets using AutoCorrelation Function (ACF)",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "3dFWHMx",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "3dFWHMx"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-mask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "mask",
                    "outputs": [],
                    "docs": {
                      "title": "Mask file",
                      "description": "Use only voxels that are nonzero in dataset 'mmm'",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "automask",
                    "outputs": [],
                    "docs": {
                      "title": "Automask flag",
                      "description": "Compute a mask from THIS dataset",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-automask"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "demed",
                    "outputs": [],
                    "docs": {
                      "title": "Demethod flag",
                      "description": "if the input dataset has more than one sub-brick then subtract the median of each voxel's time series before processing FWHM",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-demed"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "unif",
                    "outputs": [],
                    "docs": {
                      "title": "Uniform normalization flag",
                      "description": "Normalize each voxel's time series to have the same MAD before processing FWHM, implies -demed",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-unif"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-detrend"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "detrend",
                    "outputs": [],
                    "docs": {
                      "title": "Detrending order",
                      "description": "Detrend to order 'q'. If q is not given, the program picks q=NT/30; -detrend disables -demed, and includes -unif",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-detprefix"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "detprefix",
                    "outputs": [],
                    "docs": {
                      "title": "Detrended file prefix",
                      "description": "Save the detrended file into a dataset with prefix 'd'",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "geom",
                    "outputs": [],
                    "docs": {
                      "title": "Geometric mean flag",
                      "description": "Compute the final estimate as the geometric mean",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-geom"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "arith",
                    "outputs": [],
                    "docs": {
                      "title": "Arithmetic mean flag",
                      "description": "Compute the final estimate as the arithmetic mean",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-arith"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "combine",
                    "outputs": [],
                    "docs": {
                      "title": "Combine flag",
                      "description": "Combine the final measurements along each axis into one result",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-combine"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-out"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "out",
                    "outputs": [],
                    "docs": {
                      "title": "Output file",
                      "description": "Write output to file 'ttt' (3 columns of numbers). If not given, the sub-brick outputs are not written. Use '-out -' to write to stdout, if desired",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "compat",
                    "outputs": [],
                    "docs": {
                      "title": "Compatibility flag",
                      "description": "Be compatible with the older 3dFWHM",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-compat"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-acf"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "acf",
                    "outputs": [],
                    "docs": {
                      "title": "ACF parameter",
                      "description": "Compute the spatial autocorrelation of the data as a function of radius, then fit that to a model and output the model parameters",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "infile",
                    "outputs": [],
                    "docs": {
                      "title": "Input file",
                      "description": "Input dataset",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": "3dFWHMx",
        "description": "Compute Full Width at Half Maximum (FWHM) for FMRI datasets using AutoCorrelation Function (ACF)",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null,
  "project": {
    "name": "unknown",
    "version": "0.1.0",
    "docs": {
      "title": null,
      "description": null,
      "authors": [],
      "literature": [],
      "urls": []
    },
    "license": null,
    "extras": {}
  }
}