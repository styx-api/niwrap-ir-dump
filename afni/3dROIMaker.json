{
  "uid": "5920f7c4edf531d99fbcd79f62063134f553617f.boutiques",
  "package": {
    "name": "afni",
    "version": "24.2.06",
    "docker": "afni/afni_make_build:AFNI_24.2.06",
    "docs": {
      "title": "AFNI",
      "description": "AFNI (Analysis of Functional NeuroImages) is a leading software suite of C, Python, R programs and shell scripts primarily developed for the analysis and display of multiple MRI modalities: anatomical, functional MRI (FMRI) and diffusion weighted (DW) data. It is freely available (both as open source code and as precompiled binaries) for research purposes. The software is made to run on virtually any Unix system with X11 and Motif displays. Binary packages are provided for MacOS and Linux systems such as Fedora, CentOS/Red Hat and Ubuntu (which includes the Windows Subsystem for Linux).",
      "authors": [],
      "literature": [],
      "urls": [
        "https://afni.nimh.nih.gov/"
      ]
    }
  },
  "command": {
    "base": {
      "id": 22,
      "name": "3dROIMaker",
      "outputs": [
        {
          "id": 20,
          "name": "gm_map",
          "tokens": [
            {
              "refId": 2,
              "fileRemoveSuffixes": []
            },
            "_GM+orig.*.HEAD"
          ],
          "docs": {
            "title": "GM map of ROIs",
            "description": "GM map of ROIs based on value- and volume-thresholding, corresponding to gray matter regions of activation.",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        },
        {
          "id": 21,
          "name": "gmi_map",
          "tokens": [
            {
              "refId": 2,
              "fileRemoveSuffixes": []
            },
            "_GMI+orig.*.HEAD"
          ],
          "docs": {
            "title": "GMI map of inflated ROIs",
            "description": "Map of inflated GM ROIs based on GM map, with ROIs inflated either by user-design or WM skeleton.",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        }
      ],
      "docs": {
        "title": "3dROIMaker",
        "description": "Create a labelled set of ROIs from input data, useful in combining functional and tractographic/structural data.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "3dROIMaker",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "3dROIMaker"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "inset",
                    "outputs": [],
                    "docs": {
                      "title": "Input dataset",
                      "description": "3D volume(s) of values, especially functionally-derived quantities like correlation values or ICA Z-scores.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-thresh"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "thresh",
                    "outputs": [],
                    "docs": {
                      "title": "Threshold value",
                      "description": "Threshold for values in INSET, used to create ROI islands from the 3D volume's sea of values.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-prefix"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "prefix",
                    "outputs": [],
                    "docs": {
                      "title": "Output prefix",
                      "description": "Prefix of output name, with output files being: PREFIX_GM* and PREFIX_GMI*",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-refset"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "refset",
                    "outputs": [],
                    "docs": {
                      "title": "Reference dataset",
                      "description": "3D (or multi-subbrick) volume containing integer values with which to label specific GM ROIs after thresholding.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-volthr"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "volthr",
                    "outputs": [],
                    "docs": {
                      "title": "Volume threshold",
                      "description": "Minimum size a cluster of voxels must have in order to remain a GM ROI after thresholding. Can reduce 'noisy' clusters.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-only_some_top"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "only_some_top",
                    "outputs": [],
                    "docs": {
                      "title": "Keep top N voxels",
                      "description": "Restrict each found region to keep only N voxels with the highest inset values.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-only_conn_top"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "only_conn_top",
                    "outputs": [],
                    "docs": {
                      "title": "Keep top N contiguous voxels",
                      "description": "Select N max contiguous voxels in a region starting from peak voxel and expanding.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-inflate"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "inflate",
                    "outputs": [],
                    "docs": {
                      "title": "Inflation size",
                      "description": "Number of voxels to pad each found ROI in order to turn GM ROIs into inflated (GMI) ROIs.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "trim_off_wm",
                    "outputs": [],
                    "docs": {
                      "title": "Trim off WM",
                      "description": "Trim the INSET to exclude voxels in WM by excluding those which overlap an input WM skeleton.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-trim_off_wm"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-wm_skel"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "wm_skel",
                    "outputs": [],
                    "docs": {
                      "title": "WM skeleton",
                      "description": "3D volume containing info of WM, as might be defined from an FA map or anatomical segmentation.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-skel_thr"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "skel_thr",
                    "outputs": [],
                    "docs": {
                      "title": "Skeleton threshold",
                      "description": "Threshold value for WM skeleton if it is not a mask.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "skel_stop",
                    "outputs": [],
                    "docs": {
                      "title": "Stop at WM skeleton",
                      "description": "Stop inflation at locations which are already on WM skeleton.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-skel_stop"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 12,
                    "name": "skel_stop_strict",
                    "outputs": [],
                    "docs": {
                      "title": "Strictly stop at WM skeleton",
                      "description": "Do not allow any inflation into the skel-region.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-skel_stop_strict"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-csf_skel"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 13,
                    "name": "csf_skel",
                    "outputs": [],
                    "docs": {
                      "title": "CSF skeleton",
                      "description": "3D volume containing info of CSF. Info must be a binary mask already.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-mask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 14,
                    "name": "mask",
                    "outputs": [],
                    "docs": {
                      "title": "Input mask",
                      "description": "Mask within which to apply threshold. Useful if the MINTHR is a negative value.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 15,
                    "name": "neigh_upto_vert",
                    "outputs": [],
                    "docs": {
                      "title": "Vertex neighbor grouping",
                      "description": "Define neighbors loosely so that voxels can be grouped into the same ROI if they share at least one vertex.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-neigh_upto_vert"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 16,
                    "name": "nifti",
                    "outputs": [],
                    "docs": {
                      "title": "Output NIFTI files",
                      "description": "Switch to output *.nii.gz GM and GMI files",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-nifti"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-preinfl_inset"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 17,
                    "name": "preinfl_inset",
                    "outputs": [],
                    "docs": {
                      "title": "Pre-inflation inset",
                      "description": "Start with a WM ROI, inflate it to find the nearest GM, then expand that GM and subtract away the WM+CSF parts.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-preinfl_inflate"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 18,
                    "name": "preinfl_inflate",
                    "outputs": [],
                    "docs": {
                      "title": "Pre-inflation size",
                      "description": "Number of voxels for initial inflation of PSET.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 19,
                    "name": "dump_no_labtab",
                    "outputs": [],
                    "docs": {
                      "title": "Disable labeltable",
                      "description": "Switch for turning off labeltable attachment to the output GM and GMI files.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-dump_no_labtab"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": "3dROIMaker",
        "description": "Create a labelled set of ROIs from input data, useful in combining functional and tractographic/structural data.",
        "authors": [
          "AFNI Developers"
        ],
        "literature": [],
        "urls": [
          "https://afni.nimh.nih.gov/"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}