{
  "uid": "1593b1d76e0b989c3692731ac5705d0a7ce06564.boutiques",
  "package": {
    "name": "freesurfer",
    "version": "7.4.1",
    "docker": "freesurfer/freesurfer:7.4.1",
    "docs": {
      "title": "FreeSurfer",
      "description": "FreeSurfer is a software package for the analysis and visualization of neuroimaging data from cross-sectional and longitudinal studies. It is developed by the Laboratory for Computational Neuroimaging at the Martinos Center for Biomedical Imaging.\n\nFreeSurfer provides full processing streams for structural and functional MRI and includes tools for linear and nonlinear registration, cortical and subcortical segmentation, cortical surface reconstruction, statistical analysis of group morphometry, diffusion MRI, PET analysis, and much more. It is also the structural MRI analysis software of choice for the Human Connectome Project.",
      "authors": [],
      "literature": [],
      "urls": [
        "https://github.com/freesurfer/freesurfer"
      ]
    }
  },
  "command": {
    "base": {
      "id": 8,
      "name": "seg2filled",
      "outputs": [
        {
          "id": 7,
          "name": "out_filled_mgz",
          "tokens": [
            {
              "refId": 2,
              "fileRemoveSuffixes": []
            }
          ],
          "docs": {
            "title": "Output Filled MGZ",
            "description": "The output filled MGZ file.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "Creates a filled.mgz from an aseg-style segmentation using SAMSEG segmentation.",
        "authors": [
          "FreeSurfer Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/freesurfer/freesurfer"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "seg2filled",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "seg2filled"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-seg"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "seg_file",
                    "outputs": [],
                    "docs": {
                      "title": "Segmentation File",
                      "description": "Input aseg-style segmentation file (e.g., seg.mgz)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-norm"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "norm_file",
                    "outputs": [],
                    "docs": {
                      "title": "Normalization File",
                      "description": "Normalization file (e.g., norm.mgz)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-o"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "output_file",
                    "outputs": [],
                    "docs": {
                      "title": "Output File",
                      "description": "Filled output file (e.g., filled.mgz)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "--ndil"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "ndil",
                    "outputs": [],
                    "docs": {
                      "title": "Dilation Value",
                      "description": "Number of iterations for dilation used to speed cavity detection.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "int",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "cavity_flag",
                    "outputs": [],
                    "docs": {
                      "title": "Cavity Simulation Flag",
                      "description": "Simulate a cavity to test the filling operation.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "--cavity"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "--surf"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "surf_name",
                    "outputs": [],
                    "docs": {
                      "title": "Surface Name",
                      "description": "Name for the surface output (creates ?h.surfname).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "--surfdir"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "surf_dir",
                    "outputs": [],
                    "docs": {
                      "title": "Surface Directory",
                      "description": "Directory to put the surface (default is same as filled).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "Creates a filled.mgz from an aseg-style segmentation using SAMSEG segmentation.",
        "authors": [
          "FreeSurfer Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/freesurfer/freesurfer"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}