{
  "uid": "67ecdb74def4288562f728d10f87ede921f8ca6e.boutiques",
  "package": {
    "name": "freesurfer",
    "version": "7.4.1",
    "docker": "freesurfer/freesurfer:7.4.1",
    "docs": {
      "title": "FreeSurfer",
      "description": "FreeSurfer is a software package for the analysis and visualization of neuroimaging data from cross-sectional and longitudinal studies. It is developed by the Laboratory for Computational Neuroimaging at the Martinos Center for Biomedical Imaging.\n\nFreeSurfer provides full processing streams for structural and functional MRI and includes tools for linear and nonlinear registration, cortical and subcortical segmentation, cortical surface reconstruction, statistical analysis of group morphometry, diffusion MRI, PET analysis, and much more. It is also the structural MRI analysis software of choice for the Human Connectome Project.",
      "authors": [],
      "literature": [],
      "urls": [
        "https://github.com/freesurfer/freesurfer"
      ]
    }
  },
  "command": {
    "base": {
      "id": 10,
      "name": "mri_rf_long_train",
      "outputs": [
        {
          "id": 9,
          "name": "output_rfa_file",
          "tokens": [
            {
              "refId": 8,
              "fileRemoveSuffixes": []
            },
            ".rfa"
          ],
          "docs": {
            "title": "Output RFA File",
            "description": "The output RFA file generated by the tool",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "Trains GCA data with multiple subjects for FreeSurfer",
        "authors": [
          "FreeSurfer Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/freesurfer/freesurfer"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "mri_rf_long_train",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "mri_rf_long_train"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-seg"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "seg_dir",
                    "outputs": [],
                    "docs": {
                      "title": "Segmentation Directory",
                      "description": "Path to the segmentation volume directory, relative to $subject/mri.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-xform"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "xform",
                    "outputs": [],
                    "docs": {
                      "title": "Atlas Transform",
                      "description": "Atlas transform path relative to $subject/mri/transforms.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-mask"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "mask",
                    "outputs": [],
                    "docs": {
                      "title": "Mask Volume",
                      "description": "Volume name to use as a mask, path relative to $subject/mri.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-node_spacing"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "node_spacing",
                    "outputs": [],
                    "docs": {
                      "title": "Node Spacing",
                      "description": "Spacing of classifiers in canonical space.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-prior_spacing"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "prior_spacing",
                    "outputs": [],
                    "docs": {
                      "title": "Prior Spacing",
                      "description": "Spacing of class priors in canonical space.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-input"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "input_data",
                    "outputs": [],
                    "docs": {
                      "title": "Input Data",
                      "description": "Specify training data, path relative to $subject/mri. Can specify multiple inputs. Defaults to 'orig' if not specified.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "check",
                    "outputs": [],
                    "docs": {
                      "title": "Sanity Check Flag",
                      "description": "Conduct sanity-check of labels for obvious edit errors.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-check"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "subjects",
                    "outputs": [],
                    "docs": {
                      "title": "Subjects",
                      "description": "List of subjects for training.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": {
                    "countMin": null,
                    "countMax": null,
                    "join": null
                  },
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "output_rfa",
                    "outputs": [],
                    "docs": {
                      "title": "Output RFA Filename",
                      "description": "Output RFA filename.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "Trains GCA data with multiple subjects for FreeSurfer",
        "authors": [
          "FreeSurfer Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/freesurfer/freesurfer"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}