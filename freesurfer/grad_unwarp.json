{
  "uid": "c8a86a5da26d5d46183d8506a6feda47afabaf36.boutiques",
  "package": {
    "name": "freesurfer",
    "version": "7.4.1",
    "docker": "freesurfer/freesurfer:7.4.1",
    "docs": {
      "title": "FreeSurfer",
      "description": "FreeSurfer is a software package for the analysis and visualization of neuroimaging data from cross-sectional and longitudinal studies. It is developed by the Laboratory for Computational Neuroimaging at the Martinos Center for Biomedical Imaging.\n\nFreeSurfer provides full processing streams for structural and functional MRI and includes tools for linear and nonlinear registration, cortical and subcortical segmentation, cortical surface reconstruction, statistical analysis of group morphometry, diffusion MRI, PET analysis, and much more. It is also the structural MRI analysis software of choice for the Human Connectome Project.",
      "authors": [],
      "literature": [],
      "urls": [
        "https://github.com/freesurfer/freesurfer"
      ]
    }
  },
  "command": {
    "base": {
      "id": 11,
      "name": "grad_unwarp",
      "outputs": [
        {
          "id": 9,
          "name": "mgh_output",
          "tokens": [
            {
              "refId": 7,
              "fileRemoveSuffixes": []
            }
          ],
          "docs": {
            "title": "MGH Output file",
            "description": "Output file in MGH format",
            "authors": [],
            "literature": [],
            "urls": []
          }
        },
        {
          "id": 10,
          "name": "cor_output",
          "tokens": [
            {
              "refId": 7,
              "fileRemoveSuffixes": []
            },
            "/"
          ],
          "docs": {
            "title": "COR Output directory",
            "description": "Output directory in COR format",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "Convert, dewarp, and resample DICOM files to MGH files.",
        "authors": [
          "FreeSurfer Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/freesurfer/freesurfer"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "grad_unwarp",
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "grad_unwarp"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "infile",
                    "outputs": [],
                    "docs": {
                      "title": "Input file",
                      "description": "Input file or directory (dcmfile, dcmdir, or mghfile)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-s"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "seriesno",
                    "outputs": [],
                    "docs": {
                      "title": "Series number",
                      "description": "DICOM series number, required if input is a directory",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-unwarp"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "unwarp_type",
                    "outputs": [],
                    "docs": {
                      "title": "Unwarp type",
                      "description": "Gradient unwarping displacement type or map file (required for MGH file)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "nojac",
                    "outputs": [],
                    "docs": {
                      "title": "Nojac flag",
                      "description": "Do not perform jacobian correction when unwarping",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-nojac"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "corfov",
                    "outputs": [],
                    "docs": {
                      "title": "Corfov flag",
                      "description": "Resample to Coronal FOV",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-corfov"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "cor",
                    "outputs": [],
                    "docs": {
                      "title": "Cor format flag",
                      "description": "Output in COR format instead of MGH",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "bool",
                    "valueTrue": [
                      "-cor"
                    ],
                    "valueFalse": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": false
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-interp"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "interp",
                    "outputs": [],
                    "docs": {
                      "title": "Interpolation method",
                      "description": "Interpolation method (cubic, linear, nearest, spline)",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-o"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "outfile",
                    "outputs": [],
                    "docs": {
                      "title": "Output file",
                      "description": "Output file in MGH format",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-matlab"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "matlab_binary",
                    "outputs": [],
                    "docs": {
                      "title": "Matlab binary path",
                      "description": "Path to the Matlab binary, version 6.5 or higher required",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": "/space/lyon/6/pubsw/common/matlab/6.5/bin/matlab"
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "Convert, dewarp, and resample DICOM files to MGH files.",
        "authors": [
          "FreeSurfer Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/freesurfer/freesurfer"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}