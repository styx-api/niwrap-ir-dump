{
  "uid": "a114d5c9bfbab1242b558e6ff3e44480841f6e38.boutiques",
  "package": {
    "name": "ants",
    "version": "2.5.3",
    "docker": "antsx/ants:v2.5.3",
    "docs": {
      "title": "ANTs",
      "description": "Advanced Normalization Tools (ANTs) is a C++ library available through the command line that computes high-dimensional mappings to capture the statistics of brain structure and function. It allows one to organize, visualize and statistically explore large biomedical image sets. Additionally, it integrates imaging modalities in space + time and works across species or organ systems with minimal customization.\n\nThe ANTs library is considered a state-of-the-art medical image registration and segmentation toolkit which depends on the Insight ToolKit, a widely used medical image processing library to which ANTs developers contribute. ANTs-related tools have also won several international, unbiased competitions such as MICCAI, BRATS, and STACOM.",
      "authors": [],
      "literature": [],
      "urls": [
        "https://github.com/ANTsX/ANTs"
      ]
    }
  },
  "command": {
    "base": {
      "id": 6,
      "name": "ANTSUseDeformationFieldToGetAffineTransform",
      "outputs": [
        {
          "id": 5,
          "name": "out_affine_txt",
          "tokens": [
            {
              "refId": 3,
              "fileRemoveSuffixes": []
            }
          ],
          "docs": {
            "title": "Output Affine Transform",
            "description": "The output is the affine transformation matrix file.",
            "authors": [],
            "literature": [],
            "urls": []
          }
        }
      ],
      "docs": {
        "title": null,
        "description": "Extracts an affine transform from a deformation field. The input deformation field is expected to be in the same physical space as the images you want to transform.",
        "authors": [
          "ANTs Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/ANTsX/ANTs"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "ANTSUseDeformationFieldToGetAffineTransform",
      "globalName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "ANTSUseDeformationFieldToGetAffineTransform"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "deformation_field",
                    "outputs": [],
                    "docs": {
                      "title": "Deformation Field",
                      "description": "The input deformation field in NIfTI format (e.g., zzzWarp.nii.gz).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "load_ratio",
                    "outputs": [],
                    "docs": {
                      "title": "Load Ratio",
                      "description": "Ratio of points to be loaded from deformation field to save memory (ex: 0.01).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "transform_type",
                    "outputs": [],
                    "docs": {
                      "title": "Transform Type",
                      "description": "Type of transform to be extracted. Can be 'rigid' or 'affine'.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": [
                    "rigid",
                    "affine"
                  ],
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "output_affine",
                    "outputs": [],
                    "docs": {
                      "title": "Output Affine",
                      "description": "The output file where the affine transform will be saved (e.g., OutAffine.txt).",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "mask",
                    "outputs": [],
                    "docs": {
                      "title": "Mask",
                      "description": "Optional mask file defining the region from which points will be selected.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": null,
        "description": "Extracts an affine transform from a deformation field. The input deformation field is expected to be in the same physical space as the images you want to transform.",
        "authors": [
          "ANTs Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/ANTsX/ANTs"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "stdoutAsStringOutput": null,
  "stderrAsStringOutput": null
}