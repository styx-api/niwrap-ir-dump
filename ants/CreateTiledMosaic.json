{
  "uid": "ce3fc57fea426a71907429b635a0ccf43f34f6db.boutiques",
  "command": {
    "base": {
      "id": 13,
      "name": "CreateTiledMosaic",
      "outputs": [
        {
          "id": 12,
          "name": "tiled_mosaic_image",
          "tokens": [
            {
              "refId": 5,
              "fileRemoveSuffixes": [],
              "fallback": null
            }
          ],
          "docs": {
            "title": "Tiled Mosaic Image",
            "description": "The output is the tiled mosaic image.",
            "authors": [],
            "literature": [],
            "urls": []
          },
          "mediaTypes": []
        }
      ],
      "docs": {
        "title": "CreateTiledMosaic",
        "description": "Render a 3-D image volume with optional Rgb overlay.",
        "authors": [
          "ANTs Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/ANTsX/ANTs"
        ]
      }
    },
    "body": {
      "type": "struct",
      "name": "CreateTiledMosaic",
      "publicName": null,
      "groups": [
        {
          "cargs": [
            {
              "tokens": [
                "CreateTiledMosaic"
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-i"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 0,
                    "name": "input_image",
                    "outputs": [],
                    "docs": {
                      "title": "Input Image",
                      "description": "Main input is a 3-D grayscale image.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-r"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 1,
                    "name": "rgb_image",
                    "outputs": [],
                    "docs": {
                      "title": "Rgb Image",
                      "description": "An optional Rgb image can be added as an overlay. It must have the same image geometry as the input grayscale image.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-x"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 2,
                    "name": "mask_image",
                    "outputs": [],
                    "docs": {
                      "title": "Mask Image",
                      "description": "Specifies the ROI of the RGB voxels used.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "file",
                    "resolveParent": false,
                    "mutable": false,
                    "mediaTypes": []
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-a"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 3,
                    "name": "alpha",
                    "outputs": [],
                    "docs": {
                      "title": "Alpha",
                      "description": "If an Rgb image is provided, render the overlay using the specified alpha parameter.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "float",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-e"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 4,
                    "name": "functional_overlay",
                    "outputs": [],
                    "docs": {
                      "title": "Functional Overlay",
                      "description": "A functional overlay can be specified using both and rgb image and a mask specifying where that rgb image should be applied. Both images must have the same image geometry as the input image. Optionally, an alpha parameter can be specified.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-o"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 5,
                    "name": "output",
                    "outputs": [],
                    "docs": {
                      "title": "Output Tiled Mosaic Image",
                      "description": "The output is the tiled mosaic image. The format must support the specific data type: floating point images without RGB overlays, Rgb images with intensities scaled to [0,255] if overlays are present.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": false,
                  "choices": null,
                  "defaultValue": null
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-t"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 6,
                    "name": "tile_geometry",
                    "outputs": [],
                    "docs": {
                      "title": "Tile Geometry",
                      "description": "The tile geometry specifies the number of rows and columns in the output image. For example, specifying '5x10' renders 5 rows by 10 columns of slices.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-d"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 7,
                    "name": "direction",
                    "outputs": [],
                    "docs": {
                      "title": "Direction",
                      "description": "Specifies the direction of the slices. Can be based on image storage in memory or aligned physical space. Defaults to z-direction if unspecified.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": [
                    "0",
                    "1",
                    "2",
                    "x",
                    "y",
                    "z"
                  ],
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-p"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 8,
                    "name": "pad_or_crop",
                    "outputs": [],
                    "docs": {
                      "title": "Pad or Crop",
                      "description": "Specify padding or cropping with a voxel-width boundary for each slice. Padding uses a specified constant value. Cropping pads with negative voxel-widths.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-s"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 9,
                    "name": "slices",
                    "outputs": [],
                    "docs": {
                      "title": "Slices",
                      "description": "Control over which slices to render. Specify slices directly or incrementally with optional start and end slices.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-f"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 10,
                    "name": "flip_slice",
                    "outputs": [],
                    "docs": {
                      "title": "Flip Slice",
                      "description": "Flip individual slice images horizontally and/or vertically.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "string"
                  },
                  "list": null,
                  "nullable": true,
                  "choices": null,
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        },
        {
          "cargs": [
            {
              "tokens": [
                "-g"
              ],
              "join": null
            },
            {
              "tokens": [
                {
                  "base": {
                    "id": 11,
                    "name": "permute_axes",
                    "outputs": [],
                    "docs": {
                      "title": "Permute Axes",
                      "description": "Permute (or swap) the axes of the individual slice images.",
                      "authors": [],
                      "literature": [],
                      "urls": []
                    }
                  },
                  "body": {
                    "type": "int",
                    "minValue": null,
                    "maxValue": null
                  },
                  "list": null,
                  "nullable": true,
                  "choices": [
                    0,
                    1
                  ],
                  "defaultValue": {
                    "_special": "SET_TO_NONE"
                  }
                }
              ],
              "join": null
            }
          ],
          "join": null
        }
      ],
      "join": null,
      "docs": {
        "title": "CreateTiledMosaic",
        "description": "Render a 3-D image volume with optional Rgb overlay.",
        "authors": [
          "ANTs Developers"
        ],
        "literature": [],
        "urls": [
          "https://github.com/ANTsX/ANTs"
        ]
      }
    },
    "list": null,
    "nullable": false,
    "choices": null,
    "defaultValue": null
  },
  "captureStdout": null,
  "captureStderr": null,
  "project": {
    "name": "unknown",
    "version": "0.1.0",
    "docs": {
      "title": null,
      "description": null,
      "authors": [],
      "literature": [],
      "urls": []
    },
    "license": null,
    "extras": {}
  },
  "_sSetUp": false
}